// Generated with RobotBuilder version 0.0.1
package org.usfirst.frc2876.Robot2013;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.buttons.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import org.usfirst.frc2876.Robot2013.commands.AutoTurnShootCG;
import org.usfirst.frc2876.Robot2013.commands.DriveForward;
import org.usfirst.frc2876.Robot2013.commands.DriveForwardStraight;
import org.usfirst.frc2876.Robot2013.commands.Find2PtTarget;
import org.usfirst.frc2876.Robot2013.commands.FindTargets;
import org.usfirst.frc2876.Robot2013.commands.MoveShooter;
import org.usfirst.frc2876.Robot2013.commands.Shoot;
import org.usfirst.frc2876.Robot2013.commands.ShooterIdle;
import org.usfirst.frc2876.Robot2013.commands.TurnRobot;
/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);
    
    // Another type of button you can create is a DigitalIOButton, which is
    // a button or switch hooked up to the cypress module. These are useful if
    // you want to build a customized operator interface.
    // Button button = new DigitalIOButton(1);
    
    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.
    
    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:
    
    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());
    
    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());
    
    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());
    
    // The following variables are automatically assigned by
    // robotbuilder and will be updated the next time you export to
    // Java from robot builder. Do not put any code or make any change
    // in the following block or it will be lost on an update. To
    // prevent this subsystem from being automatically updated, delete
    // the following line.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton joy1Trigger;
    public JoystickButton joy1Button2;
    public JoystickButton joy1Button3;
    public JoystickButton joy1Button4;
    public JoystickButton joy1Button5;
    public JoystickButton joy1Button6;
    public JoystickButton joy1Button7;
    public JoystickButton joy1Button8;
    public JoystickButton joy1Button9;
    public JoystickButton joy1Button10;
    public JoystickButton joy1Button11;
    public Joystick joystick1;              //armstick
    public JoystickButton joy2Trigger;
    public JoystickButton joy2Button2;
    public JoystickButton joy2Button3;
    public JoystickButton joy2Button4;
    public JoystickButton joy2Button5;
    public JoystickButton joy2Button6;
    public JoystickButton joy2Button7;
    public Joystick joystick2;              //left
    public JoystickButton joy3Trigger;
    public JoystickButton joy3Button2;
    public JoystickButton joy3Button3;
    public JoystickButton joy3Button4;
    public JoystickButton joy3Button5;
    public JoystickButton joy3Button6;
    public Joystick joystick3;              //right
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public OI() {
        // The following variables are automatically assigned by
        // robotbuilder and will be updated the next time you export to
        // Java from robot builder. Do not put any code or make any change
        // in the following block or it will be lost on an update. To
        // prevent this subsystem from being automatically updated, delete
        // the following line.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        joystick3 = new Joystick(3);        //right
        
        joy3Button6 = new JoystickButton(joystick3, 1);
        
        joy3Button5 = new JoystickButton(joystick3, 1);
        
        joy3Button4 = new JoystickButton(joystick3, 1);
        
        joy3Button3 = new JoystickButton(joystick3, 1);
        
        joy3Button2 = new JoystickButton(joystick3, 1);
        
        joy3Trigger = new JoystickButton(joystick3, 1);
        
        //
        joystick2 = new Joystick(2);        //left
        
        joy2Button7 = new JoystickButton(joystick2, 1);
        
        joy2Button6 = new JoystickButton(joystick2, 1);
        
        joy2Button5 = new JoystickButton(joystick2, 1);
        
        joy2Button4 = new JoystickButton(joystick2, 1);
        
        joy2Button3 = new JoystickButton(joystick2, 1);
        
        joy2Button2 = new JoystickButton(joystick2, 1);
        
        joy2Trigger = new JoystickButton(joystick2, 1);
        
        //
        joystick1 = new Joystick(1);        //armstick
        
        joy1Button11 = new JoystickButton(joystick1, 1);
        
        
        joy1Button10 = new JoystickButton(joystick1, 1);
        
        
        joy1Button9 = new JoystickButton(joystick1, 1);
        joy1Button9.whenPressed(new AutoTurnShootCG());
        
        joy1Button8 = new JoystickButton(joystick1, 1);
        joy1Button8.whenPressed(new TurnRobot());
        
        joy1Button7 = new JoystickButton(joystick1, 1);
        joy1Button7.whenPressed(new Find2PtTarget());
        
        joy1Button6 = new JoystickButton(joystick1, 1);
        joy1Button6.whenPressed(new DriveForwardStraight());
        
        joy1Button5 = new JoystickButton(joystick1, 1);
        joy1Button5.whenPressed(new FindTargets());
        
        joy1Button4 = new JoystickButton(joystick1, 1);
        joy1Button4.whileHeld(new MoveShooter());
        
        joy1Button3 = new JoystickButton(joystick1, 1);
        joy1Button3.whenPressed(new DriveForward());
        
        joy1Button2 = new JoystickButton(joystick1, 1);
        joy1Button2.whenPressed(new ShooterIdle());
        
        joy1Trigger = new JoystickButton(joystick1, 1);
        joy1Trigger.whenPressed(new Shoot());
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        SmartDashboard.putData("Shooter Idle", joy1Button2);
        SmartDashboard.putData("Shooter Shoot", joy1Trigger);
        SmartDashboard.putData("Drive Forwards", joy1Button3);
    }
    
    
    
    // The following variables are automatically assigned by
    // robotbuilder and will be updated the next time you export to
    // Java from robot builder. Do not put any code or make any change
    // in the following block or it will be lost on an update. To
    // prevent this subsystem from being automatically updated, delete
    // the following line.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick3() {
        return joystick3;
    }
    public Joystick getJoystick2() {
        return joystick2;
    }
    public Joystick getJoystick1() {
        return joystick1;
    }
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}
