// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2876.RecycleRush2876.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc2876.RecycleRush2876.Robot;

/**
 *
 */
public class  ElevatorUp extends Command {

	public ElevatorUp() {
		// Use requires() here to declare subsystem dependencies
		// eg. requires(chassis);

		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.elevator);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize() {
    	// Turn off pid before we try to move elevator manually.
    	Robot.elevator.disable();

		if (isFinished() == false){
			Robot.elevator.motorUp();
		}   	
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		SmartDashboard.putNumber("Potentiometer", Robot.elevator.getPosition());
	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return Robot.elevator.topMax();
	}

	// Called once after isFinished returns true
	protected void end() {
		Robot.elevator.motorOff();

		// This will turn PID back on.. and elevator will move back
    	// to whatever spot it was in before we tried to move it manually.
    	// Is that what we want? 
    	// If not, we need to read the pot and set elevator PID to new setpoint
    	// before enabling again.
    	Robot.elevator.enable();
	}
	
	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
		end();
	}
}
