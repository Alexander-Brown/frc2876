// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2876.RecycleRush2876.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc2876.RecycleRush2876.Robot;
import org.usfirst.frc2876.RecycleRush2876.subsystems.DriveTrain;

/**
 *
 */
public class  DriveWithJoystick extends Command {

    public DriveWithJoystick() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	//Does not need to do anything
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double x = Robot.oi.getLeftX();
	    double y = Robot.oi.getLeftY() > 0 ? Math.pow(Robot.oi.getLeftY(), 2) : 0 - Math.pow(Robot.oi.getLeftY(), 2);
	    double rotation = Robot.oi.getRightX() > 0 ? Math.pow(Robot.oi.getRightX(), 2) : 0 - Math.pow(Robot.oi.getRightX(), 2); 
    	
	    if (!Robot.driveTrain.getIsFOV()){
	        Robot.driveTrain.drive(x, y, rotation);
	    } else {
	    	double gyroAngle = Robot.driveTrain.getGyroAngle();
	    	Robot.driveTrain.fovDrive(x, y, rotation, gyroAngle);
	    }
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
