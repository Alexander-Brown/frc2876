// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc2876.Bball2013.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2876.Bball2013.Robot;
/**
 *
 */
public class  Drive extends Command {
    private double sense = 1;
    public Drive(double sense) {
        
        this.sense = sense;
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
        
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.driveTrain.startEncoder(Robot.driveTrain.rightEncoder);
        Robot.driveTrain.startEncoder(Robot.driveTrain.leftEncoder);
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        Robot.driveTrain.drive(Robot.oi.getleftJoystick(), Robot.oi.getrightJoystick(), sense);
        Robot.driveTrain.getLeftEncoder();
        Robot.driveTrain.getRightEncoder();
        Robot.driveTrain.getLeftEncoderDistance();
        Robot.driveTrain.getRightEncoderDistance();
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return true;
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.driveTrain.stopEncoder(Robot.driveTrain.rightEncoder);
        Robot.driveTrain.stopEncoder(Robot.driveTrain.leftEncoder);
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end(); //
    }
}
